class TestController < ApplicationController
  before_filter :verify_authorization

  def test_file_path
    render :text => "<img src='http://localhost:3000/system/posts/photos/000/000/307/original/me_100.jpg' />"
  end

  def save_file
    data = Base64.decode64("")
    File.open("public/assets/images/steve.jpg", 'wb') { |file| (file << data) }
  end

  def test_violation_creation
    ViolationRecord.create(
        :user_id => current_user.id,
        :violation => ILLICIT_PHOTO,
        :violation_source => POST_VIOLATION_SOURCE,
        :violation_source_id => 2,
        :action_taken => "post set to deleted // user.status set to suspended // tweets_undon - test // email delivered"
    )

  end

  private

  #DO NOT DELETE
  def verify_authorization
    if signed_in? and current_user.is_admin?
      return true
    else
      #we dont want people to know this exists, so redirect to 404
      redirect_to "/404.html"
    end
  end

end
